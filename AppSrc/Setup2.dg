Use cSplitterContainer.pkg
Use cScrollingContainer.pkg
Use dfLine.pkg
Use cRDCSpinForm.pkg
Use cRDCCheckbox.pkg
Use cManifestIniFile.pkg
Use cManifestFunctionLibrary.pkg
Use cRDCDbModalPanel.pkg
Use cRDCIniFileForm.pkg
Use cRDCIniFileCheckbox.pkg
Use cRDCComboForm.pkg
Use cRDCButton.pkg                    
Use cRDCDbForm.pkg

Use cCryptographer.pkg

#IFNDEF clGreenGrey
Define clGreenGrey      for (RGB(64, 84, 93))
Define clGreenGreyLight for (RGB(7, 117, 104))
#ENDIF

Register_Object oDbMerger_vw

Object oSetup_dg is a cRDCDbModalPanel
    Set Location to 1 0
    Set Label to "Configure the Program"
    Set Size to 323 463
    Set Icon to "Settings.ico"

    Property Boolean pbRestart False

    Object oSplitterContainer is a cSplitterContainer
        Set pbSplitVertical to False
        Set piSplitterLocation to 183
        Set peFixedPanel to fpFixLastPanel
        Set piSplitterColor to clWhite

        Object oSplitterContainerChild1 is a cSplitterContainerChild
            Set Border_Style to Border_None

            Object oScrollingContainer is a cScrollingContainer

                Object oScrollingClientArea is a cScrollingClientArea

                    Object oLibraries_tb is a TextBox
                        Set Size to 10 49
                        Set Location to 10 11
                        Set Label to "Libraries"
                    End_Object

                    Object oLibraries_lc is a LineControl
                        Set Size to 2 388
                        Set Location to 15 41
                        Set peAnchors to anLeftRight
                    End_Object

                    Object oManifestLibraryFolder_fm is a cRDCIniFileForm
                        Set Size to 12 261
                        Set Location to 24 109
                        Set Label to "Manifest Fragment Library"
                        Set Status_Help to "Select path to the local Manifest Fragment Library. Click the 'Browse' button or press (F4)."
                        Set peAnchors to anTopLeftRight
                        Set psKey to CS_ManifestFolder
                        Set pbFolderValue to True
                        Set psPromptFolderHeaderText to "Select the Manifest Fragment Library folder"

                        Procedure WriteIniValue
                            String sValue
                            Forward Send WriteIniValue
                            Get Value to sValue
                            Set psManifestFragmentLibrary of ghoManifestFunctionLibrary to sValue
                        End_Procedure

                        // Sets the default Manifest Fragment Library path.
                        Procedure OnCreate
                            String sPath sOrgPath
                            Boolean bExists

                            Move CS_IniFileFolder to sOrgPath
                            Get vFolderFormat of ghoManifestFunctionLibrary sOrgPath to sOrgPath
                            Move (sOrgPath + CS_ManifestFolder) to sOrgPath
                            Get Value to sPath
                            Get IniFileValue of ghoManifestIniFile (psSectionName(ghoManifestIniFile)) CS_ManifestFolder sOrgPath to sPath
                            Get vFilePathExists sPath to bExists
                            If (bExists = False or sPath = "" or sPath = "\") Begin
                                Move sOrgPath to sPath
                            End

                            // If the Manifest Fragment Library folder doesn't exists; create it.
                            Get vFilePathExists sPath to bExists
                            If (bExists = False) Begin
                                Get vCreateDirectory sPath to bExists
                                If (bExists = False) Begin
                                    Send Info_Box ("Critical Error: Could not create Manifest Fragment Library!\n" + sPath)
                                    Move "" to sPath
                                End
                            End

                            // Note: This must be done _after_ vFilePathExists & vCreateDirectory.
                            Get vFolderFormat of ghoManifestFunctionLibrary sPath to sPath
                            Set IniFileValue of ghoManifestIniFile (psSectionName(ghoManifestIniFile)) CS_ManifestFolder to sPath
                            Set psManifestFragmentLibrary of ghoManifestFunctionLibrary to sPath
                            Set Value to sPath
                        End_Procedure

                    End_Object

                    Object oManifestLibraryFolder_Btn is a cRDCButton
                        Set Size to 12 50
                        Set Location to 24 375
                        Set Label to "Browse..."
                        Set Status_Help to "Set the path to the Manifest Fragment Library"
                        Set psImage to "FolderOpen.ico"
                        Set peAnchors to anTopRight

                        Procedure OnClick
                            Send Prompt of oManifestLibraryFolder_fm
                        End_Procedure
                    End_Object

                    Object oCommonComLibraryFolder_fm is a cRDCIniFileForm
                        Set Size to 12 261
                        Set Location to 40 109
                        Set Label_Col_Offset to 2
                        Set Label_Justification_Mode to JMode_Right
                        Set Label to "Common COM Library"
                        Set Status_Help to "Select path to the Common COM (OCX/DLL) Library where you keep copies of your COM (OCX/DLL) components that needs to be copied to a workspace. Click the 'Browse' button or press (F4)."
                        Set peAnchors to anTopLeftRight
                        Set psKey to CS_CommonCOMFolderName
                        Set pbFolderValue to True
                        Set psPromptFolderHeaderText to "Select Common COM (OCX/DLL) Library Folder"

                        Procedure WriteIniValue
                            String sValue
                            Forward Send WriteIniValue
                            Get Value to sValue
                            Set psCommonCOMLibrary of ghoManifestFunctionLibrary to sValue
                        End_Procedure

                        // Sets the default Common COM Library path.
                        Procedure OnCreate
                            String sPath sOrgPath
                            Boolean bExists bState

                            Move CS_IniFileFolder to sOrgPath
                            Get vFolderFormat of ghoManifestFunctionLibrary sOrgPath to sOrgPath
                            Move (sOrgPath + CS_CommonCOMFolderName) to sOrgPath
                            Get Value to sPath
                            Get IniFileValue of ghoManifestIniFile (psSectionName(ghoManifestIniFile)) CS_CommonCOMFolderName sOrgPath to sPath
                            Get vFilePathExists sPath to bExists
                            If (bExists = False or sPath = "" or sPath = "\") Begin
                                Move sOrgPath to sPath
                            End

                            // If the Common COM Library folder doesn't exists; create it.
                            Get vFilePathExists sPath to bExists
                            If (bExists = False) Begin
                                Get vCreateDirectory sPath to bState
                                If (bState = True) Begin
                                    Send Info_Box ("Could not create Common COM Library!\n" + sPath)
                                    Move "" to sPath
                                End
                            End

                            // Note: This must be done _after_ vFilePathExists & vCreateDirectory.
                            Get vFolderFormat of ghoManifestFunctionLibrary sPath to sPath
                            Set IniFileValue of ghoManifestIniFile (psSectionName(ghoManifestIniFile)) to CS_CommonCOMFolderName sPath
                            Set psCommonCOMLibrary of ghoManifestFunctionLibrary to sPath
                            Set Value to sPath
                        End_Procedure

                    End_Object

                    Object oCommonComLibraryFolder_Btn is a cRDCButton
                        Set Size to 12 50
                        Set Location to 40 375
                        Set Label to "Browse..."
                        Set Status_Help to "Set the path to the Common COM Library folder"
                        Set psImage to "FolderOpen.ico"
                        Set peAnchors to anTopRight

                        Procedure OnClick
                            Send Prompt of oCommonComLibraryFolder_fm
                        End_Procedure

                    End_Object

                    Object oEditor_tb is a TextBox
                        Set Size to 10 49
                        Set Location to 63 11
                        Set Label to "Editor Settings"
                    End_Object

                    Object oEditor_lc is a LineControl
                        Set Size to 2 369
                        Set Location to 68 62
                        Set peAnchors to anLeftRight
                    End_Object

                    Object oEditor_fm is a cRDCIniFileForm
                        Set Size to 12 261
                        Set Location to 76 109
                        Set Label_Col_Offset to 2
                        Set Label_Justification_Mode to JMode_Right
                        Set Label to "Editor"
                        Set Status_Help to "Select the editor program to use when viewing Manifest Fragment Files. Click the 'Browse' button or press (F4)."
                        Set peAnchors to anTopLeftRight
                        Set psKey to CS_Editor
                        Set psDefault to CS_Notepad
                        Set pbFileValue to True
                        Set psPromptFileHeaderText to "Select An Editor Program"
                        Set psFileMask to "Select Editor Program (*.exe)|*.exe"
                    End_Object

                    Object oSelect_Btn is a cRDCButton
                        Set Size to 12 50
                        Set Location to 76 375
                        Set Label to "Browse..."
                        Set Status_Help to "Select the editor program to be used to edit and viewing Manifest Fragment Files"
                        Set psImage to "FolderOpen.ico"
                        Set peAnchors to anTopRight

                        Procedure OnClick
                            Send Prompt of oEditor_fm
                        End_Procedure
                    End_Object

                    Object oEditorParam_fm is a cRDCIniFileForm
                        Set Size to 12 261
                        Set Location to 92 109
                        Set Label_Col_Offset to 2
                        Set Label_Justification_Mode to JMode_Right
                        Set Label to "Parameters"
                        Set Status_Help to "Enter any editor parameters that needs to be passed on the command line to the editor."
                        Set psKey to CS_EditorParams
                        Set peAnchors to anTopLeftRight
                    End_Object

                    Object oStudioIntegration_tb is a TextBox
                        Set Size to 10 50
                        Set Location to 116 11
                        Set Label to "Studio Integration"
                    End_Object

                    Object oStudioIntegration_lc is a LineControl
                        Set Size to 2 358
                        Set Location to 121 78
                        Set peAnchors to anLeftRight
                    End_Object

                    Object oStudioMajorVersion_sf is a cRDCSpinForm
                        Set Size to 12 27
                        Set Location to 129 195
                        Set Maximum_Position to 30
                        Set Minimum_Position to 14
                        Set Label_Col_Offset to 2
                        Set Label_Justification_Mode to JMode_Right
                        Set Label to "Add to Studio's Tools Menu     Major Version"
                        Set Status_Help to "Visual DataFlex main version - e.g. '17'"
                        Set Value to FMAC_VERSION
                        Set peAnchors to anNone
                    End_Object

                    Object oStudioMinorVersion_sf is a cRDCSpinForm
                        Set Size to 12 27
                        Set Location to 129 275
                        Set Label_Col_Offset to 2
                        Set Label to "Minor Version"
                        Set Status_Help to "Visual DataFlex minor version - e.g. '0'"
                        Set Maximum_Position to 9
                        Set Minimum_Position to 0
                        Set Value to FMAC_REVISION
                        Set Label_Justification_Mode to JMode_Right
                        Set peAnchors to anNone
                    End_Object

                    Object oInstallInStudio_btn is a cRDCButton
                        Set Size to 12 50
                        Set Location to 129 375
                        Set Label to "Add Now"
                        Set Status_Help to "Add to Visual DataFlex Studios 'Tools' menu. The Studio version can be selected with the two spinforms. The COMManifestStudio program gets added to the Studios Tools menu. When selected from the Studio it will pass the current project name on the command line so that the current program's manifest file is automatically loaded by the COMManifestStudio program."
                        Set psImage to "ActionAddButton.ico"
                        Set peAnchors to anTopRight

                        Procedure OnClick
                            Integer iRetval iMajorVersion iMinorVersion
                            String sText sStudioVersion
                            Get Value of oStudioMajorVersion_sf to iMajorVersion
                            Get Value of oStudioMinorVersion_sf to iMinorVersion
                            Move (String(iMajorVersion) + "." + String(iMinorVersion)) to sStudioVersion
                            Get AddProgramToStudioToolsMenu of ghoManifestFunctionLibrary sStudioVersion to iRetval
                            Case Begin
                                Case (iRetval = cx_RegKeyAlreadyExist)
                                    Move ("The program already exists in the" * sStudioVersion * "Visual DataFlex Studios Tools menu.") to sText
                                    Break
                                Case (iRetval = cx_RegKeyCreated)
                                    Move ("Success. The tool was added to the" * sStudioVersion *  "Visual DataFlex Studios Tools menu.") to sText
                                    Break
                                Case (iRetval = cx_RegkeyFailed)
                                    Move "Failed. Could not create the registry key for adding the program to the Visual DataFlex Studios Tools menu." to sText
                                    Break
                                Case (iRetval = cx_RegKeyVDFKeyDoesNotExist)
                                    Move ("Could not find the Studio registry key. Is Visual DataFlex Studio version" * sStudioVersion * "really installed on this machine?") to sText
                                    Break
                                Case (iRetval = CX_InstalledOkVdfUnder16)
                                    Move ("The program was added to the" * sStudioVersion * "Studios Tools menu successfully, but because you installed for an earlier version of the Studio than 16.0 you need to compile this program under that same VDF version, else the Studio can't start the program properly. (Sorry, just a 'feature' of earlier versions of the Studio)") to sText
                                    Break
                            Case End

                            Send Info_Box sText
                        End_Procedure
                    End_Object

                    Object oDialogSettings_tb is a TextBox
                        Set Size to 10 49
                        Set Location to 154 11
                        Set Label to "Dialog Settings"
                    End_Object

                    Object oDialogSettings_lc is a LineControl
                        Set Size to 2 366
                        Set Location to 159 66
                        Set peAnchors to anLeftRight
                    End_Object

                    Object oFirstTimeUsage_cb is a cRDCIniFileCheckbox
                        Set Size to 10 50
                        Set Location to 166 109
                        Set Label to "Show 'First Time Usage' dialog on startup"
                        Set peAnchors to anNone
                        Set psKey to CS_FirstTimeUsageText
                    End_Object

                    Object oGridSettings_tb is a TextBox
                        Set Size to 10 41
                        Set Location to 181 11
                        Set Label to "Grid Settings"
                    End_Object

                    Object oGridSettings_lc is a LineControl
                        Set Size to 2 373
                        Set Location to 186 59
                        Set peAnchors to anTopLeftRight
                    End_Object

                    Object oUseHightligthRowState_cb is a cRDCIniFileCheckbox
                        Set Size to 10 50
                        Set Location to 195 109
                        Set Label to "Highlight current grid row"
                        Set peAnchors to anNone
                        Set psKey to CS_UseHighlightstateText
                    End_Object

                    Object oRowBackgroundColor_cf is a cRDCComboForm
                        Set Size to 12 107
                        Set Location to 194 248
                        Set Label to "Color"
                        Set Entry_State to False
                        Set Combo_Sort_State to False
                        Set peAnchors to anNone

                        Procedure Activating
                            Boolean bChecked
                            String sYes
                            Get IniFileValue of ghoManifestIniFile (psSectionName(ghoManifestIniFile)) CS_UseHighlightstateText CS_BooleanNo to sYes
                            Move (CS_BooleanYes = sYes) to bChecked
                            Set Enabled_State to bChecked
                        End_Procedure

                        Procedure Combo_Fill_List
                            String sColor
                            Send Combo_Add_Item "clGreenGreyLight"
                            Send Combo_Add_Item "clGreenGrey"
                            Send Combo_Add_Item "clDefault"
                            Send Combo_Add_Item "clAqua"
                            Send Combo_Add_Item "clBlack"
                            Send Combo_Add_Item "clBlue"
                            Send Combo_Add_Item "clDkGray"
                            Send Combo_Add_Item "clFuchsia"
                            Send Combo_Add_Item "clGray"
                            Send Combo_Add_Item "clGreen"
                            Send Combo_Add_Item "clLime"
                            Send Combo_Add_Item "clLtGray"
                            Send Combo_Add_Item "clMaroon"
                            Send Combo_Add_Item "clNavy"  
                            Send Combo_Add_Item "clNone"
                            Send Combo_Add_Item "clOlive"
                            Send Combo_Add_Item "clPurple"
                            Send Combo_Add_Item "clRed"
                            Send Combo_Add_Item "clSilver"
                            Send Combo_Add_Item "clTeal"
                            Send Combo_Add_Item "clWhite"
                            Send Combo_Add_Item "clYellow"
                            Send Combo_Add_Item "clPurple"
                            Send Combo_Add_Item "clScrollBar"
                            Send Combo_Add_Item "clBackground"
                            Send Combo_Add_Item "clActiveCaption"
                            Send Combo_Add_Item "clInactiveCaption"
                            Send Combo_Add_Item "clMenu"
                            Send Combo_Add_Item "clWindow"
                            Send Combo_Add_Item "clWindowFrame"
                            Send Combo_Add_Item "clMenuText"
                            Send Combo_Add_Item "clWindowText"
                            Send Combo_Add_Item "clCaptionText"
                            Send Combo_Add_Item "clActiveBorder"
                            Send Combo_Add_Item "clInactiveBorder"
                            Send Combo_Add_Item "clAppWorkSpace"
                            Send Combo_Add_Item "clHighlight"
                            Send Combo_Add_Item "clHighlightText"
                            Send Combo_Add_Item "clBtnFace"
                            Send Combo_Add_Item "clBtnShadow"
                            Send Combo_Add_Item "clGrayText"
                            Send Combo_Add_Item "clBtnText"
                            Send Combo_Add_Item "clInactiveCaptionText"
                            Send Combo_Add_Item "clBtnHighlight"
                            Send Combo_Add_Item "cl3DDkShadow"
                            Send Combo_Add_Item "cl3DLight"
                            Send Combo_Add_Item "clInfoText"
                            Send Combo_Add_Item "clInfoBk"
                            Get IniFileValue of ghoManifestIniFile (psSectionName(ghoManifestIniFile)) CS_HighlightColorText clDefault to sColor
                            Set Value 0 to sColor
                        End_Procedure
                        Send Combo_Fill_List

                        // Note: This includes a bugfix for Visual DataFlex when entry_state=false.
                        //       The bug has been around for as long as I can remember <sigh>.
                        Procedure OnCloseUp
                            String sColor
                            Integer iItem
                            Forward Send OnCloseUp
                            Get Value to sColor
                            // DataFlex Bugfix. We need to get the selected value this way when
                            // the comboform has Entry_State is set to false:
                            Get WinCombo_Current_Item to iItem
                            Get WinCombo_Value iItem to sColor
                            Set IniFileValue of ghoManifestIniFile (psSectionName(ghoManifestIniFile)) CS_HighlightColorText to sColor
                            Broadcast Recursive Set piSelectedRowBackColor of (Client_Id(phoMainPanel(ghoApplication))) to sColor
                            Broadcast Recursive Set piHighlightBackColor   of (Client_Id(phoMainPanel(ghoApplication))) to sColor
                        End_Procedure

                    End_Object

                    Object oUseAlternateRowBackgroundColor_cb is a cRDCIniFileCheckbox
                        Set Size to 10 50
                        Set Location to 207 109
                        Set Label to "Use Alternate Grid Row Background Color"
                        Set peAnchors to anNone
                        Set psKey to CS_pbAlternateRowColor
                    End_Object

                    Object oToolbarInfo_tb is a TextBox
                        Set Size to 10 27
                        Set Location to 221 11
                        Set Label to "Toolbars"
                    End_Object

                    Object oToolbar_lc is a LineControl
                        Set Size to 2 387
                        Set Location to 226 45
                        Set peAnchors to anTopLeftRight
                    End_Object

                    Object oToolbarIconSize_cf is a cRDCComboForm
                        Set Size to 12 130
                        Set Location to 235 109
                        Set Label to "Icon Size"
                        Set Entry_State to False
                        Set Combo_Sort_State to False
                        Set peAnchors to anNone

                        Procedure Combo_Fill_List
                            Integer iSize
                            String sValue
                            Send Combo_Add_Item CS_piToolbarSize16x16
                            Send Combo_Add_Item CS_piToolbarSize24x24
                            Send Combo_Add_Item CS_piToolbarSize32x32

                            Get IniFileValue of ghoManifestIniFile (psSectionName(ghoManifestIniFile)) CS_piToolbarIconSize 24 to iSize
                            If (iSize = 16) ;
                                Move CS_piToolbarSize16x16 to sValue
                            If (iSize = 24) ;
                                Move CS_piToolbarSize24x24 to sValue
                            If (iSize = 32) ;
                                Move CS_piToolbarSize32x32 to sValue
                            Set Value 0 to sValue
                        End_Procedure
                        Send Combo_Fill_List

                        Procedure OnCloseUp
                            Delegate Set pbRestart to True
                        End_Procedure

                        // Note: This includes a bugfix for Combos when entry_state=false.
                        //       The bug has been around for as long as I can remember <sigh>.
                        Procedure WriteIniValue
                            Integer iItem iSize
                            String sValue
                            // VDF Bugfix. We need to get the selected value this way when
                            // the comboform has Entry_State set to false:
                            Get WinCombo_Current_Item     to iItem
                            Get WinCombo_Value iItem to sValue
                            If (sValue contains "16") ;
                                Move 16 to iSize
                            If (sValue contains "24") ;
                                Move 24 to iSize
                            If (sValue contains "32") ;
                                Move 32 to iSize
                            Set IniFileValue of ghoManifestIniFile (psSectionName(ghoManifestIniFile)) CS_piToolbarIconSize to iSize
                        End_Procedure

                    End_Object

                    Object oShowTextBelowIcons_cb is a cRDCComboForm
                        Set Size to 12 130
                        Set Location to 251 109
                        Set Label to "Toolbar Icons And Text"
                        Set Entry_State to False
                        Set Combo_Sort_State to False
                        Set peAnchors to anNone

                        Procedure Combo_Fill_List
                            String sValue
                            Send Combo_Add_Item CS_ShowIconOnly
//                            Send Combo_Add_Item CS_ShowTextRightOfIcon
                            Send Combo_Add_Item CS_ShowTextBelowIcon

                            Get IniFileValue of ghoManifestIniFile (psSectionName(ghoManifestIniFile)) CS_ToolbarIconText CS_ShowIconOnly to sValue
                            Set Value 0 to sValue
                        End_Procedure
                        Send Combo_Fill_List

                        Procedure OnCloseUp
                            Delegate Set pbRestart to True
                        End_Procedure

                        // Note: This includes a bugfix for Combos when entry_state=false.
                        //       The bug has been around for as long as I can remember <sigh>.
                        Procedure WriteIniValue
                            Integer iItem
                            String sValue
                            // VDF Bugfix. We need to get the selected value this way when
                            // the comboform has Entry_State set to false:
                            Get WinCombo_Current_Item     to iItem
                            Get WinCombo_Value iItem to sValue
                            Set IniFileValue of ghoManifestIniFile (psSectionName(ghoManifestIniFile)) CS_ToolbarIconText to sValue
                        End_Procedure

                    End_Object

//                    Object oDigitallySigning_tb is a TextBox
//                        Set Size to 10 57
//                        Set Location to 273 11
//                        Set Label to "Digital Signatures"
//                    End_Object
//
//                    Object oDigitallySigning_lc is a LineControl
//                        Set Size to 2 293
//                        Set Location to 278 71
//                        Set peAnchors to anLeftRight
//                    End_Object
//
//                    Object oCredentialsFile_fm is a cRDCIniFileForm
//                        Set Size to 12 193
//                        Set Location to 301 109
//                        Set Label_Col_Offset to 2
//                        Set Label_Justification_Mode to JMode_Right
//                        Set Label to "Software Credentials File"
//                        Set Status_Help to "Select the Software Publishing Credential File to be used to digitally sign your exe programs. Note: The credential file MUST be a .pfx file. Click the 'Browse' button or press (F4)."
//                        Set peAnchors to anTopLeftRight
//                        Set psKey to CS_CredentialsFile
//                        Set pbFileValue to True
//                        Set psPromptFileHeaderText to "Select a Sofware Credentials File"
//                        Set psFileMask to "Software Credentials Files (*.pfx)|*.pfx"
//                        Procedure End_Construct_Object
//                            Forward Send End_Construct_Object
//                            Set Prompt_Button_Mode to PB_PromptOff
//                        End_Procedure
//                    End_Object
//
//                    Object oSelectCredentialsFile_Btn is a cRDCButton
//                        Set Size to 12 50
//                        Set Location to 301 307
//                        Set Label to "Browse..."
//                        Set Status_Help to "Select a Software Publishing Credentials File (.pfx file)"
//                        Set peAnchors to anTopRight
//
//                        Procedure OnClick
//                            Send Prompt of oCredentialsFile_fm
//                        End_Procedure
//                    End_Object
//
//                    Object oCredentialsPw_fm is a cRDCIniFileForm
//                        Set Size to 12 86
//                        Set Location to 318 109
//                        Set Label_Col_Offset to 2
//                        Set Label_Justification_Mode to JMode_Right
//                        Set Label to "Password"
//                        Set Status_Help to "Password for the credentials file"
//                        Set peAnchors to anNone
//                        Set Password_State to True
//                        Set psKey to CS_CredentialsFilePw
//
//                        Procedure ReadIniValue
//                            String sValue
//                            Handle hoCryptoGrapher
//
//                            Get IniFileValueBase64 of ghoManifestIniFile (psSectionName(ghoManifestIniFile)) CS_CredentialsFilePw "" to sValue
//                            If (sValue <> "") Begin
//                                Get Create (RefClass(cCryptographer)) to hoCryptoGrapher
//                                Get Decrypt of hoCryptoGrapher CS_CredentialsHashSetup sValue to sValue
//                                Set Value to sValue
//                                Send Destroy of hoCryptoGrapher
//                            End
//                        End_Procedure
//
//                        Procedure WriteIniValue
//                            String sValue
//                            Handle hoCryptoGrapher
//
//                            Get Value to sValue
//                            If (sValue <> "") Begin
//                                Get Create (RefClass(cCryptographer)) to hoCryptoGrapher
//                                Get Encrypt of hoCryptoGrapher CS_CredentialsHashSetup sValue to sValue
//                                Send Destroy of hoCryptoGrapher
//                            End
//                            Set IniFileValueBase64 of ghoManifestIniFile (psSectionName(ghoManifestIniFile)) CS_CredentialsFilePw to sValue
//                        End_Procedure
//
//                    End_Object

//                    Object oExportCertificateHelp_btn is a cRDCButton
//                        Set Size to 12 50
//                        Set Location to 318 307
//                        Set Label to "Help"
//                        Set Status_Help to "Certificate Export Help. Explains how to export your digital software certificate to a .pfx file."
//                        Set peAnchors to anTopRight
//                        Procedure OnClick
//                            Send vShellExecute "open" CS_ExportCertificateHelp "" ""
//                        End_Procedure
//                    End_Object
//
//                    Object oUseCertificateStore_cb is a cRDCIniFileCheckbox
//                        Set Size to 10 97
//                        Set Location to 284 109
//                        Set Label to "Auto-select from Certificate Store"
//                        Set peAnchors to anNone
//                        Set psKey to CS_UseCertificateStore
//                        Set Status_Help to "Automatically selects the best suited certificate from Windows Certificate Store on the machine."
//
//                        Procedure OnChange
//                            Boolean bChecked
//                            Get Checked_State to bChecked
//                            Set Enabled_State of oCredentialsFile_fm        to (bChecked = False)
//                            Set Enabled_State of oSelectCredentialsFile_Btn to (bChecked = False)
//                            Set Enabled_State of oCredentialsPw_fm          to (bChecked = False)
//                            Set Enabled_State of oExportCertificateHelp_btn to (bChecked = False)
//                        End_Procedure
//                    End_Object

//                    Object oUseVerboseState_cb is a cRDCIniFileCheckbox
//                        Set Size to 10 97
//                        Set Location to 284 255
//                        Set Label to "Show Verbose info"
//                        Set peAnchors to anNone
//                        Set psKey to CS_UseVerboseState
//                        Set psDefault to CS_BooleanYes
//                        Set Status_Help to "Show verbose information (detailed info) on signing and digtial certificate verification."
//                    End_Object

//                    Object oDigitallySigningInfo_tb is a TextBox
//                        Set Auto_Size_State to False
//                        Set Size to 16 248
//                        Set Location to 339 31
//                        Set Label to "You can add a description of the data you are signing and a Web location containing a description."
//                        Set Justification_Mode to JMode_Left
//                    End_Object
//
//                    Object oCredentialsDescription_fm is a cRDCIniFileForm
//                        Set Size to 12 193
//                        Set Location to 360 109
//                        Set Label_Col_Offset to 2
//                        Set Label_Justification_Mode to JMode_Right
//                        Set Label to "Description (optional)"
//                        Set Status_Help to "Either type a description, or provide a Web address that points to a site that contains more info."
//                        Set peAnchors to anTopLeftRight
//                        Set psKey to CS_CredentialsDescription
//                    End_Object
//
//                    Object oCredentialsURL_fm is a cRDCIniFileForm
//                        Set Size to 12 193
//                        Set Location to 376 109
//                        Set Label_Col_Offset to 2
//                        Set Label_Justification_Mode to JMode_Right
//                        Set Label to "Web Location (optional)"
//                        Set Status_Help to "Either type a description, or provide a Web address that points to a site that contains a description."
//                        Set peAnchors to anTopLeftRight
//                        Set psKey to CS_CredentialsWebSite
//                    End_Object
//
//                    Object oDigitallySigningTimeStampInfo_tb is a TextBox
//                        Set Auto_Size_State to False
//                        Set Size to 9 265
//                        Set Location to 404 31
//                        Set Label to "Time stamping. A timestamp guarantees that the data existed on a certain date."
//                        Set Justification_Mode to JMode_Left
//                    End_Object
//
//                    Object oAddTimeStamp_cb is a cRDCIniFileCheckbox
//                        Set Size to 10 97
//                        Set Location to 415 109
//                        Set Label to "Add a timestamp to the data"
//                        Set Status_Help to ("It is STRONGLY advised to add a timestamp. In many cases, an expired certificate means that the signature validation will fail and a trust warning will appear." * ;
//                                          "Time-stamping was designed to alleviate this problem. The idea is that at the time, at which the code is signed," * ;
//                                          "the certificate was confirmed to be valid and, therefore, the signature is valid. This is much the same as a handwritten signature." * ;
//                                          "The main benefit is that it extends code trust beyond the validity period of the certificate. The code stays good as" * ;
//                                          "long as you can run it. Also, down the road the certificate may be revoked and the code will still be trusted.")
//                        Set peAnchors to anNone
//                        Set psKey to CS_CredentialUseTimeStamp
//
//                        Procedure OnChange
//                            Boolean bChecked
//                            Get Checked_State to bChecked
//                            If (oTimeStampURL_fm <> 0) Begin
//                                Set Enabled_State of oTimeStampURL_fm to (bChecked = True)
//                            End
//                        End_Procedure
//                    End_Object
//
//                    Object oTimeStampURL_fm is a cRDCIniFileForm
//                        Set Size to 12 193
//                        Set Location to 428 109
//                        Set Label_Col_Offset to 2
//                        Set Label_Justification_Mode to JMode_Right
//                        Set Label to "Timestamp service for SHA1"
//                        Set Status_Help to ("Enter the Web address that points to a site that contains a timestamp service, such as:" * CS_CredentialsWebTimeStampDefault)
//                        Set peAnchors to anTopLeftRight
//                        Set psKey to CS_CredentialsWebTimeStamp
//                        Set psDefault to CS_CredentialsWebTimeStampDefault
//
//                        Procedure ReadIniValue
//                            Boolean bChecked
//                            Forward Send ReadIniValue
//                            Get Checked_State of oAddTimeStamp_cb to bChecked
//                            Set Enabled_State to bChecked
//                        End_Procedure
//
//                    End_Object
//
//                    Object oTimeStampSHA256URL_fm is a cRDCIniFileForm
//                        Set Size to 12 193
//                        Set Location to 448 109
//                        Set Label_Col_Offset to 2
//                        Set Label_Justification_Mode to JMode_Right
//                        Set Label to "Timestamp service for SHA256"
//                        Set Status_Help to ("Enter the Web address that points to a site that contains a timestamp service for signing with SHA256. Such as:" * CS_CredentialsWebTimeStampSHA256Default)
//                        Set peAnchors to anTopLeftRight
//                        Set psKey to CS_CredentialsWebTimeStampSHA256
//                        Set psDefault to CS_CredentialsWebTimeStampSHA256Default
//
//                        Procedure ReadIniValue
//                            Boolean bChecked
//                            Forward Send ReadIniValue
//                            Get Checked_State of oAddTimeStamp_cb to bChecked
//                            Set Enabled_State to bChecked
//                        End_Procedure
//
//                    End_Object

                End_Object

            End_Object

        End_Object

        Object oSplitterContainerChild2 is a cSplitterContainerChild
            Set Border_Style to Border_Dialog

            Object oOK_Btn is a cRDCButton
                Set Size to 14 50
                Set Label    to "&OK"
                Set Location to 5 330
                Set peAnchors to anBottomRight
                Set Default_State to True

                Procedure OnClick
                    String sProgram
                    Boolean bRestart
                    Integer iRetval

                    // This will make all values to be written to the ini-file:
                    Broadcast Recursive Send WriteIniValue of (phoModalPanelHandle(Self))

                    Delegate Get pbRestart to bRestart
                    If (bRestart = True) Begin
                        Send DoChangeToolbars of ghoCommandBars
                        Get YesNo_Box "The program needs to be restarted. Restart now?" to iRetval
                        If (iRetval = MBR_Yes) Begin
                            // First save skin settings
                            Send SaveSkinPreference of ghoSkinFramework
                            // then sizes & locations of the ghoApplication object etc.
                            // We pass the object id of the oMain object and True to actually save changes.
                            Send DoSaveEnvironment of ghoApplication (Parent(Client_Id(ghoCommandBars))) True
                            Move (Module_Name(Desktop)) to sProgram
                            // and restart the program.
                            Runprogram (sProgram + ".exe")
                        End
                    End

                    Send Close_Panel
                End_Procedure
            End_Object

            Object oCancel_Btn is a cRDCButton
                Set Size to 14 50
                Set Label    to "&Cancel"
                Set Status_Help to "Close Panel"
                Set Location to 5 386
                Set peAnchors to anBottomRight
                Procedure OnClick
                    Send Close_Panel
                End_Procedure
            End_Object

        End_Object

        Procedure Activating
            Forward Send Activating
            Set pbRestart to False
        End_Procedure

        Procedure Deactivating
            Forward Send Deactivating
            Set pbRestart to False
        End_Procedure

    End_Object

    On_Key Key_Alt+Key_O  Send KeyAction of oOK_Btn
    On_Key Key_Ctrl+Key_O Send KeyAction of oOK_Btn
    On_Key Key_Alt+Key_C  Send KeyAction of oCancel_Btn
    On_Key kCancel        Send KeyAction of oCancel_Btn
End_Object
